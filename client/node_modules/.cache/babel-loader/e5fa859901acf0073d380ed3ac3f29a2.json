{"ast":null,"code":"import { applyMiddleware, createStore, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport loggerMiddleware from './logger';\nimport monitorReducersEnhancer from './monitorReducer';\nimport AppReducer from './combineReducers';\nexport default function configureStore(preloadedState) {\n  const rootReducer = (state, action) => {\n    if (action.type === \"LOG_OUT\") state = undefined;\n    return AppReducer(state, action);\n  };\n\n  const middlewares = [loggerMiddleware, thunkMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n  const enhancers = [middlewareEnhancer, monitorReducersEnhancer];\n  const composedEnhancers = compose(...enhancers);\n  const store = createStore(rootReducer, preloadedState, composedEnhancers);\n  return store;\n}","map":{"version":3,"sources":["/home/neetu/mindfire-app/mindfire-app/client/src/modalStore/store.js"],"names":["applyMiddleware","createStore","compose","thunkMiddleware","loggerMiddleware","monitorReducersEnhancer","AppReducer","configureStore","preloadedState","rootReducer","state","action","type","undefined","middlewares","middlewareEnhancer","enhancers","composedEnhancers","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,gBAAP,MAA6B,UAA7B;AACA,OAAOC,uBAAP,MAAoC,kBAApC;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,eAAe,SAASC,cAAT,CAAwBC,cAAxB,EAAwC;AAEnD,QAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,QAAIA,MAAM,CAACC,IAAP,KAAgB,SAApB,EAA+BF,KAAK,GAAGG,SAAR;AAC/B,WAAOP,UAAU,CAACI,KAAD,EAAQC,MAAR,CAAjB;AAEH,GAJD;;AAKA,QAAMG,WAAW,GAAG,CAACV,gBAAD,EAAmBD,eAAnB,CAApB;AACA,QAAMY,kBAAkB,GAAGf,eAAe,CAAC,GAAGc,WAAJ,CAA1C;AACA,QAAME,SAAS,GAAG,CAACD,kBAAD,EAAqBV,uBAArB,CAAlB;AACA,QAAMY,iBAAiB,GAAGf,OAAO,CAAC,GAAGc,SAAJ,CAAjC;AACA,QAAME,KAAK,GAAGjB,WAAW,CAACQ,WAAD,EAAcD,cAAd,EAA8BS,iBAA9B,CAAzB;AACA,SAAOC,KAAP;AACH","sourcesContent":["import { applyMiddleware, createStore, compose } from 'redux'\nimport thunkMiddleware from 'redux-thunk';\nimport loggerMiddleware from './logger';\nimport monitorReducersEnhancer from './monitorReducer';\nimport AppReducer from './combineReducers';\nexport default function configureStore(preloadedState) {\n\n    const rootReducer = (state, action) => {\n        if (action.type === \"LOG_OUT\") state = undefined;\n        return AppReducer(state, action);\n\n    }\n    const middlewares = [loggerMiddleware, thunkMiddleware];\n    const middlewareEnhancer = applyMiddleware(...middlewares);\n    const enhancers = [middlewareEnhancer, monitorReducersEnhancer];\n    const composedEnhancers = compose(...enhancers);\n    const store = createStore(rootReducer, preloadedState, composedEnhancers);\n    return store;\n}"]},"metadata":{},"sourceType":"module"}