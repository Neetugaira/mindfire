{"ast":null,"code":"import _objectSpread from \"/home/neetu/mindfire-app/mindfire-app/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/neetu/mindfire-app/mindfire-app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/neetu/mindfire-app/mindfire-app/client/src/components/signup/Signup.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport request from '../../utils/request';\nimport { toast, ToastContainer } from 'react-toastify';\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction Signup({\n  history\n}) {\n  let _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      category = _useState2[0],\n      setCategory = _useState2[1];\n\n  let _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      countries = _useState4[0],\n      setCountries = _useState4[1];\n\n  let _useState5 = useState({\n    f_name: \"\",\n    l_name: '',\n    email: '',\n    org_name: '',\n    country: '',\n    pre: '',\n    phone: '',\n    password: '',\n    re_password: ''\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      state = _useState6[0],\n      setState = _useState6[1];\n\n  let _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      err_f_name = _useState8[0],\n      setErr_f_name = _useState8[1];\n\n  let _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      err_l_name = _useState10[0],\n      setErr_l_name = _useState10[1];\n\n  let _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      err_email = _useState12[0],\n      setErr_email = _useState12[1];\n\n  let _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      err_org_name = _useState14[0],\n      setErr_org_name = _useState14[1];\n\n  let _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      err_country = _useState16[0],\n      setErr_country = _useState16[1];\n\n  let _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      err_phone = _useState18[0],\n      setErr_phone = _useState18[1];\n\n  let _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      err_password = _useState20[0],\n      setErr_password = _useState20[1];\n\n  let _useState21 = useState(''),\n      _useState22 = _slicedToArray(_useState21, 2),\n      err_re_password = _useState22[0],\n      setErr_re_password = _useState22[1];\n\n  let _useState23 = useState(false),\n      _useState24 = _slicedToArray(_useState23, 2),\n      emailValid = _useState24[0],\n      setEmailValid = _useState24[1];\n\n  let _useState25 = useState(false),\n      _useState26 = _slicedToArray(_useState25, 2),\n      phoneValid = _useState26[0],\n      setPhoneValid = _useState26[1];\n\n  let _useState27 = useState(false),\n      _useState28 = _slicedToArray(_useState27, 2),\n      passwordValid = _useState28[0],\n      setPasswordValid = _useState28[1];\n\n  useEffect(() => {\n    request('GET', '/auth/getCategoriesAndCountries').then(res => {\n      if (res.data.success) {\n        setCategory(res.data.categories);\n        setCountries(res.data.countries);\n      }\n    });\n  }, [setCategory]);\n\n  const handleChange = event => {\n    if (event.target.name === 'country') {\n      let temp = JSON.parse(event.target.value);\n      setState(_objectSpread({}, state, {\n        'country': temp.name,\n        'pre': temp.phonecode\n      }));\n    } else {\n      setState(_objectSpread({}, state, {\n        [event.target.name]: event.target.value\n      }));\n    }\n  };\n\n  const validateAllField = () => {\n    setEmailValid(true);\n    setPhoneValid(true);\n    setPasswordValid(true);\n    let isFormValid = true;\n\n    if (state.f_name === '') {\n      isFormValid = false;\n      setErr_f_name(\"*Please enter your First Name.\");\n    }\n\n    if (typeof state.f_name !== \"undefined\") {\n      if (!state.f_name.match(/^[a-zA-Z ]*$/)) {\n        isFormValid = false;\n        setErr_f_name(\"*Please enter alphabet characters only.\");\n      }\n    }\n\n    if (state.l_name === '') {\n      isFormValid = false;\n      setErr_l_name(\"*Please enter your Last Name.\");\n    }\n\n    if (typeof state.l_name !== \"undefined\") {\n      if (!state.l_name.match(/^[a-zA-Z ]*$/)) {\n        isFormValid = false;\n        setErr_l_name(\"*Please enter alphabet characters only.\");\n      }\n    }\n\n    if (state.email === '') {\n      setEmailValid(true);\n      isFormValid = false;\n      setErr_email(\"*Please enter your Email-ID.\");\n    }\n\n    if (state.email !== '') {\n      //regular expression for email validation\n      var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n\n      if (!pattern.test(state.email)) {\n        setEmailValid(false);\n        isFormValid = false;\n        setErr_email(\"*Please enter valid Email-ID.\");\n      }\n    }\n\n    if (state.org_name === '') {\n      isFormValid = false;\n      setErr_org_name(\"*Please select Category.\");\n    }\n\n    if (state.country === '') {\n      isFormValid = false;\n      setErr_country(\"*Please select Country.\");\n    }\n\n    if (state.phone === '') {\n      setPhoneValid(false);\n      isFormValid = false;\n      setErr_phone(\"*Please enter your phone number.\");\n    }\n\n    if (state.phone !== '') {\n      if (!state.phone.match(/^[0-9]{10}$/)) {\n        setPhoneValid(false);\n        isFormValid = false;\n        setErr_phone(\"*Please enter valid phone number.\");\n      }\n    }\n\n    if (state.password === '') {\n      setPasswordValid(true);\n      isFormValid = false;\n      setErr_password(\"*Please enter your Password.\");\n    }\n\n    if (state.password !== '') {\n      if (!state.password.match(/^.*(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%&]).*$/)) {\n        setPasswordValid(false);\n        isFormValid = false;\n        setErr_password(\"*Password Must contain at least one number one special character, one uppercase and lowercase letter and at least 8 or more characters.\");\n      }\n    }\n\n    if (state.re_password === '') {\n      isFormValid = false;\n      setErr_re_password(\"*Please enter your Re-Password.\");\n    }\n\n    if (state.re_password !== '') {\n      if (state.password !== state.re_password) {\n        isFormValid = false;\n        setErr_re_password(\"Re-Password must be same as the password field\");\n      }\n    }\n\n    return isFormValid;\n  };\n\n  const submit = () => {\n    const isValid = validateAllField();\n\n    if (isValid) {\n      let signupData = {\n        f_name: state.f_name,\n        l_name: state.l_name,\n        email: state.email,\n        org_name: state.org_name,\n        country: state.country,\n        pre: state.pre,\n        phone: state.phone,\n        password: state.password\n      };\n      request('POST', '/auth/signup', {\n        data: signupData\n      }).then(res => {\n        if (res.data.success) {\n          toast.success(res.data.message);\n          history.push('/');\n        } else {\n          toast.error(res.data.message);\n        }\n      });\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"register-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"Register\"), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"Your basic details are required for SignUp\", React.createElement(\"span\", {\n    className: \"f-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Already have an account? \", React.createElement(Link, {\n    to: {\n      pathname: '/'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Sign in\"), \".\")), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"f_name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"First Name*\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"First Name\",\n    className: \"form-control\",\n    value: state.f_name,\n    name: \"f_name\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }), state.f_name === '' || !state.f_name.match(/^[a-zA-Z ]*$/) ? React.createElement(\"span\", {\n    className: \"errorMsg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, err_f_name) : null), React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"l_name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"Last Name*\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Last Name\",\n    className: \"form-control\",\n    name: \"l_name\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }), state.l_name === '' || !state.l_name.match(/^[a-zA-Z ]*$/) ? React.createElement(\"span\", {\n    className: \"errorMsg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, err_l_name) : null)), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"Email*\"), React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Enter Email\",\n    className: \"form-control\",\n    name: \"email\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }), state.email === '' || !emailValid ? React.createElement(\"span\", {\n    className: \"errorMsg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, err_email) : null), React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"org_name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, \"Category*\"), React.createElement(\"select\", {\n    className: \"form-control valid\",\n    name: \"org_name\",\n    id: \"org_name\",\n    onChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: state.org_name,\n    disabled: true,\n    selected: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, \"Select Category\"), category.map((count, i) => {\n    return React.createElement(\"option\", {\n      key: i,\n      value: count.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, count.name);\n  })), state.org_name === '' ? React.createElement(\"span\", {\n    className: \"errorMsg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, err_org_name) : null)), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"country\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, \"Country*\"), React.createElement(\"select\", {\n    className: \"form-control valid\",\n    name: \"country\",\n    type: \"text\",\n    onChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: state.country,\n    disabled: true,\n    selected: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, \"Select Country\"), countries.map((count, i) => {\n    return React.createElement(\"option\", {\n      key: i,\n      value: JSON.stringify(count),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, count.name);\n  })), state.country === '' ? React.createElement(\"span\", {\n    className: \"errorMsg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, err_country) : null), React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"phone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, \"Phone*\"))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-3 pr-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Select\",\n    className: \"form-control\",\n    name: \"pre\",\n    id: \"prefix\",\n    required: true,\n    \"aria-required\": \"true\",\n    value: '+' + state.pre,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-md-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter Phone\",\n    name: \"phone\",\n    className: \"form-control\",\n    required: true,\n    \"aria-required\": \"true\",\n    value: state.phone,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }), state.phone === '' || !phoneValid ? React.createElement(\"span\", {\n    className: \"errorMsg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, err_phone) : null)))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ss-item-required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, \"Password*\"), React.createElement(\"input\", {\n    id: \"password-field\",\n    type: \"password\",\n    placeholder: \"Enter Password\",\n    name: \"password\",\n    className: \"form-control\",\n    pattern: \"(?=.*\\\\d)(?=.*[a-z])(?=.*[!@#\\\\$%\\\\^&])(?=.*[A-Z]).{8,}\",\n    title: \"Must contain at least one number one special character, one uppercase and lowercase letter and at least 8 or more characters\",\n    value: state.password,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }), state.password === '' || !passwordValid ? React.createElement(\"span\", {\n    className: \"errorMsg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, err_password) : null)), React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ss-item-required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"re_password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, \"Re-enter Password*\"), React.createElement(\"input\", {\n    id: \"repassword-field\",\n    type: \"password\",\n    placeholder: \"Re-enter Password\",\n    name: \"re_password\",\n    className: \"form-control\",\n    title: \"This must be same as the password field \",\n    value: state.re_password,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }), state.re_password === '' || state.password !== state.re_password ? React.createElement(\"span\", {\n    className: \"errorMsg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, err_re_password) : null))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"g-recaptcha\",\n    id: \"recapta\",\n    \"data-sitekey\": \"6LfuPlUUAAAAAAH2b0KeTs4aMJrd-8Q4X50qGrj_\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  })))), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-info\",\n    onClick: submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, \"Register\"))));\n}\n\nexport default Signup;","map":{"version":3,"sources":["/home/neetu/mindfire-app/mindfire-app/client/src/components/signup/Signup.js"],"names":["React","useState","useEffect","Link","Redirect","request","toast","ToastContainer","Signup","history","category","setCategory","countries","setCountries","f_name","l_name","email","org_name","country","pre","phone","password","re_password","state","setState","err_f_name","setErr_f_name","err_l_name","setErr_l_name","err_email","setErr_email","err_org_name","setErr_org_name","err_country","setErr_country","err_phone","setErr_phone","err_password","setErr_password","err_re_password","setErr_re_password","emailValid","setEmailValid","phoneValid","setPhoneValid","passwordValid","setPasswordValid","then","res","data","success","categories","handleChange","event","target","name","temp","JSON","parse","value","phonecode","validateAllField","isFormValid","match","pattern","RegExp","test","submit","isValid","signupData","message","push","error","pathname","map","count","i","stringify"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport request from '../../utils/request';\nimport {toast, ToastContainer} from 'react-toastify';\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction Signup({history}) {\n  let [category, setCategory] = useState([]);\n  let [countries, setCountries] = useState([]);\n\n let [state,setState] = useState({ f_name:\"\", l_name:'', email: '', org_name: '',country: '',\n    pre: '', phone: '', password: '', re_password: '' });\n    \n let [err_f_name, setErr_f_name] = useState('')\n let [err_l_name,  setErr_l_name] = useState('')\n let [err_email,  setErr_email] = useState('')\n let [err_org_name,  setErr_org_name] = useState('')\n let [err_country,  setErr_country] = useState('')\n let [err_phone,  setErr_phone] = useState('')\n let [err_password,  setErr_password] = useState('')\n let [err_re_password, setErr_re_password] = useState('')\n let [emailValid, setEmailValid] = useState(false);\n let [phoneValid, setPhoneValid] = useState(false)\n let [passwordValid, setPasswordValid] = useState(false);\n\n  useEffect(() => {\n    request('GET','/auth/getCategoriesAndCountries')\n      .then((res) => {\n        if (res.data.success) {\n          setCategory(res.data.categories)\n          setCountries(res.data.countries)\n        }\n      })\n  }, [setCategory]);\n\n  const handleChange = event => {\n    if(event.target.name === 'country'){\n      let temp = JSON.parse(event.target.value)\n      setState({ ...state, 'country': temp.name, 'pre': temp.phonecode })\n    }else{\n      setState({ ...state, [event.target.name]: event.target.value })\n    }\n    \n  }\n  \n  const validateAllField = () => {\n    setEmailValid(true);\n    setPhoneValid(true);\n    setPasswordValid(true);\n    let isFormValid = true;\n    \n    if(state.f_name === '') {\n      isFormValid =false;\n      setErr_f_name(\"*Please enter your First Name.\");\n    }\n    if (typeof state.f_name !== \"undefined\") {\n      if (!state.f_name.match(/^[a-zA-Z ]*$/)) {\n        isFormValid =false;\n        setErr_f_name(\"*Please enter alphabet characters only.\");\n      }\n    }\n    \n    if(state.l_name === '') {\n      isFormValid =false;\n      setErr_l_name(\"*Please enter your Last Name.\");\n    }  \n    if (typeof state.l_name !== \"undefined\") {\n      if (!state.l_name.match(/^[a-zA-Z ]*$/)) {\n        isFormValid =false;\n        setErr_l_name(\"*Please enter alphabet characters only.\");\n      }\n    }\n    \n    if(state.email === '') {\n      setEmailValid(true);\n      isFormValid =false;\n     setErr_email(\"*Please enter your Email-ID.\");\n    }  \n    if (state.email !== '') {\n      //regular expression for email validation\n      var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n      if (!pattern.test(state.email)) {\n        setEmailValid(false);\n        isFormValid =false;\n        setErr_email(\"*Please enter valid Email-ID.\");\n      }\n    } \n\n    if(state.org_name === '') {\n      isFormValid =false;\n     setErr_org_name(\"*Please select Category.\");\n    }  \n\n    if(state.country === '') {\n      isFormValid =false;\n     setErr_country(\"*Please select Country.\");\n    }  \n\n    if(state.phone === '') {\n      setPhoneValid(false);\n      isFormValid =false;\n     setErr_phone(\"*Please enter your phone number.\");\n    }  \n    if (state.phone !== '') {\n      if (!state.phone.match(/^[0-9]{10}$/)) {\n        setPhoneValid(false);\n        isFormValid =false;\n        setErr_phone(\"*Please enter valid phone number.\");\n      }\n    }\n\n    if(state.password === '') {\n      setPasswordValid(true);\n      isFormValid =false;\n     setErr_password(\"*Please enter your Password.\");\n    }  \n    if (state.password !== '') {\n      if (!state.password.match(/^.*(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%&]).*$/)) {\n        setPasswordValid(false);\n        isFormValid =false;\n        setErr_password(\"*Password Must contain at least one number one special character, one uppercase and lowercase letter and at least 8 or more characters.\");\n      }\n    }\n\n    if(state.re_password === '') {\n      isFormValid =false;\n      setErr_re_password(\"*Please enter your Re-Password.\");\n    }  \n\n    if(state.re_password !== '') {\n      if(state.password !== state.re_password) {\n        isFormValid =false;\n        setErr_re_password(\"Re-Password must be same as the password field\");\n      }\n    }\n    return isFormValid;\n  }\n\n  const submit = () => {\n    const isValid = validateAllField();\n    if(isValid) {\n      let signupData = {\n        f_name: state.f_name,\n        l_name: state.l_name,\n        email: state.email,\n        org_name: state.org_name,\n        country: state.country,\n        pre: state.pre,\n        phone: state.phone,\n        password: state.password\n      }\n      \n      request('POST', '/auth/signup',{\n        data: signupData\n      }).then(res => {\n        if(res.data.success) {\n          toast.success(res.data.message);\n          history.push('/');\n        } else {\n          toast.error(res.data.message);\n        }\n      })\n    }\n  }\n\n  return (\n    <>\n    <div className=\"register\">\n        <div className=\"register-page\">\n          <div className=\"card-header\">Register</div>\n          {/* <form method=\"post\"  name=\"userRegistrationForm\"  onSubmit= {submit} > */}\n            <h4>Your basic details are required for SignUp\n                <span className=\"f-12\">Already have an account? <Link to={{ pathname: '/' }}>Sign in</Link>.</span></h4>\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <label htmlFor=\"f_name\">First Name*</label>\n                <input type=\"text\" placeholder=\"First Name\" className=\"form-control\" value={state.f_name} name=\"f_name\" onChange={handleChange} />\n                { state.f_name === '' || (!state.f_name.match(/^[a-zA-Z ]*$/)) ?\n                <span className=\"errorMsg\">{err_f_name}</span>:null}\n              </div>\n              <div className=\"col-md-6\">\n                <label htmlFor=\"l_name\">Last Name*</label>\n                <input type=\"text\" placeholder=\"Last Name\" className=\"form-control\" name=\"l_name\"  onChange={handleChange} />\n                { state.l_name === '' || (!state.l_name.match(/^[a-zA-Z ]*$/))?\n                <span className=\"errorMsg\">{err_l_name}</span>:null}\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <label htmlFor=\"email\">Email*</label>\n                <input type=\"email\" placeholder=\"Enter Email\" className=\"form-control\" name=\"email\"  onChange={handleChange} />\n                { state.email === '' || !emailValid ?\n                  <span className=\"errorMsg\">{err_email}</span> : null}\n              </div>\n              <div className=\"col-md-6\">\n                <label htmlFor=\"org_name\">Category*</label>\n                <select className=\"form-control valid\" name=\"org_name\" id=\"org_name\"  onChange={handleChange} required>\n                <option value={state.org_name} disabled selected>Select Category</option>\n                {\n                    category.map((count, i) => {\n                      return (<option key={i} value={count.name}>{count.name}</option>)\n                    })\n                }\n                </select>\n                { state.org_name === '' ?\n                <span className=\"errorMsg\">{err_org_name}</span> : null}\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <label htmlFor=\"country\">Country*</label>\n                <select className=\"form-control valid\" name=\"country\" type=\"text\" onChange={handleChange} required>\n                  <option value={state.country} disabled selected>Select Country</option>\n                  {\n                    countries.map((count, i) => {\n                      return (<option key={i} value={JSON.stringify(count)} >{count.name}</option>)\n                    })\n                  }\n                </select>\n                { state.country === '' ?\n                <span className=\"errorMsg\">{err_country}</span> : null}\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <label htmlFor=\"phone\">Phone*</label>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-md-3 pr-0\">\n                    <input type=\"text\" placeholder=\"Select\" className=\"form-control\" name=\"pre\" id=\"prefix\" required aria-required=\"true\" value={'+' + state.pre} readOnly/>\n                  </div>\n                  <div className=\"col-md-9\">\n                    <input type=\"text\" placeholder=\"Enter Phone\" name=\"phone\" className=\"form-control\" required aria-required=\"true\" value={state.phone} onChange={handleChange}/>\n                    { state.phone === '' || !phoneValid ?\n                    <span className=\"errorMsg\">{err_phone}</span> : null}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <div className=\"ss-item-required\">\n                  <label htmlFor=\"password\">Password*</label>\n                  <input id=\"password-field\" type=\"password\" placeholder=\"Enter Password\" name=\"password\" className=\"form-control\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[!@#\\$%\\^&])(?=.*[A-Z]).{8,}\" \n                  title=\"Must contain at least one number one special character, one uppercase and lowercase letter and at least 8 or more characters\" value={state.password} onChange={handleChange} />\n                  {/* <span toggle=\"#password-field\" className=\"fa fa-fw fa-eye field-icon toggle-password\" />\n                  <div className=\"close-btn\" style={{ display: 'none' }}> </div> */}\n                  { state.password === '' || !passwordValid ?\n                  <span className=\"errorMsg\">{err_password}</span>: null}\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"ss-item-required\">\n                  <label htmlFor=\"re_password\">Re-enter Password*</label>\n                  <input id=\"repassword-field\" type=\"password\" placeholder=\"Re-enter Password\" name=\"re_password\" className=\"form-control\"\n                   title=\"This must be same as the password field \" value={state.re_password} onChange={handleChange} />\n                  {/* <span toggle=\"#repassword-field\" className=\"fa fa-fw fa-eye field-icon toggle-password\" />\n                  <div className=\"close-btn\" style={{ display: 'none' }}>\n                    <div className=\"validate-pass\" /><button id=\"closeBtn\">x</button>\n                  </div> */}\n                  { state.re_password === '' || (state.password !== state.re_password)?\n                  <span className=\"errorMsg\">{err_re_password}</span>: null}\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <div className=\"g-recaptcha\" id=\"recapta\" data-sitekey=\"6LfuPlUUAAAAAAH2b0KeTs4aMJrd-8Q4X50qGrj_\">\n                  </div>\n                </div>\n              </div>\n            </div>\n                                        {/* set it to submit button  disabled={!state.formValid} onClick={submit} */}\n            <button type=\"submit\" className=\"btn btn-info\" onClick={submit}>Register</button>\n          {/* </form> */}\n        </div>\n        </div> \n    </>\n  )\n}\nexport default Signup"]},"metadata":{},"sourceType":"module"}