{"ast":null,"code":"var _jsxFileName = \"/home/neetu/mindfire-app/mindfire-app/client/src/App.js\";\n// import React,{useEffect} from 'react';\n// import { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\n// import { connect } from 'react-redux'\n// import { toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n// import Login from './components/login/Login'\n// import Dashboard from './components/dashboard'\n// import Header from './components/header/Header'\n// import Count from './components/count/Count'\n// import Agency from './components/agency/Agency';\n// import {initialLoad} from 'store/actions/appActions'\n//\n//\n//\n// function app({loaded, initialLoad,type}) {\n//   useEffect(()=>{\n//       if(loaded!==1){\n//           initialLoad()\n//       }\n//     }, [loaded])\n//\n//     if(loaded!==1)\n//       return <div className=\"lds-dual-ring body-loder\"></div>\n//\n//\n//   return (\n//         <Router>\n//           <Route exact path=\"/\" component={Login} />\n//           <Header/>\n//           <div className=\"main-wrapper\">\n//             <Route path=\"/dashboard\" component={Dashboard} />\n//             <Route path=\"/countReport\" component={Count} />\n//             <Route path=\"/agency\" component={Agency} />\n//           </div>\n//         </Router>\n//   )\n// }\n//\n//\n// function mapStateToProps({user}){\n//   return {\n//     loaded: user.loaded,\n//     type:user.type\n//   }\n// }\n//\n// const mapDispatchToProps = {\n//   initialLoad,\n// }\n//\n// export default connect(mapStateToProps, mapDispatchToProps)(app);\n//\n//\nimport React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Login from './components/login/Login';\nimport Dashboard from './components/dashboard';\nimport Header from './components/header/Header';\nimport Count from './components/count/Count';\nimport Agency from './components/agency/Agency';\nimport { initialLoad } from 'store/actions/appActions';\n\nfunction app({\n  loaded,\n  initialLoad,\n  requiredData,\n  type\n}) {\n  useEffect(() => {\n    if (loaded !== 1) {\n      requiredData();\n      initialLoad();\n    }\n  }, [loaded]);\n  if (loaded !== 1) return React.createElement(\"div\", {\n    className: \"lds-dual-ring body-loder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  });\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"main-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/dashboard\",\n    component: Dashboard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/countReport\",\n    component: Count,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/agency\",\n    component: Agency,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })));\n}\n\nfunction mapStateToProps({\n  user\n}) {\n  return {\n    loaded: user.loaded\n  };\n}\n\nconst mapDispatchToProps = {\n  initialLoad\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(app);","map":{"version":3,"sources":["/home/neetu/mindfire-app/mindfire-app/client/src/App.js"],"names":["React","useEffect","BrowserRouter","Router","Route","Redirect","connect","toast","Login","Dashboard","Header","Count","Agency","initialLoad","app","loaded","requiredData","type","mapStateToProps","user","mapDispatchToProps"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,QAAzC,QAAyD,kBAAzD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,uCAAP;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAAQC,WAAR,QAA0B,0BAA1B;;AAEA,SAASC,GAAT,CAAa;AAACC,EAAAA,MAAD;AAASF,EAAAA,WAAT;AAAsBG,EAAAA,YAAtB;AAAmCC,EAAAA;AAAnC,CAAb,EAAuD;AACrDhB,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGc,MAAM,KAAG,CAAZ,EAAc;AACVC,MAAAA,YAAY;AACZH,MAAAA,WAAW;AACd;AACF,GALQ,EAKN,CAACE,MAAD,CALM,CAAT;AAOA,MAAGA,MAAM,KAAG,CAAZ,EACE,OAAO;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEF,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEP,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,YAAZ;AAAyB,IAAA,SAAS,EAAEC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,cAAZ;AAA2B,IAAA,SAAS,EAAEE,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,SAAS,EAAEC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAHF,CADF;AAWD;;AAED,SAASM,eAAT,CAAyB;AAACC,EAAAA;AAAD,CAAzB,EAAgC;AAC9B,SAAO;AACLJ,IAAAA,MAAM,EAAEI,IAAI,CAACJ;AADR,GAAP;AAGD;;AAED,MAAMK,kBAAkB,GAAG;AACzBP,EAAAA;AADyB,CAA3B;AAIA,eAAeP,OAAO,CAACY,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CN,GAA7C,CAAf","sourcesContent":["// import React,{useEffect} from 'react';\n// import { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\n// import { connect } from 'react-redux'\n// import { toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n// import Login from './components/login/Login'\n// import Dashboard from './components/dashboard'\n// import Header from './components/header/Header'\n// import Count from './components/count/Count'\n// import Agency from './components/agency/Agency';\n// import {initialLoad} from 'store/actions/appActions'\n//\n//\n//\n// function app({loaded, initialLoad,type}) {\n//   useEffect(()=>{\n//       if(loaded!==1){\n//           initialLoad()\n//       }\n//     }, [loaded])\n//\n//     if(loaded!==1)\n//       return <div className=\"lds-dual-ring body-loder\"></div>\n//\n//\n//   return (\n//         <Router>\n//           <Route exact path=\"/\" component={Login} />\n//           <Header/>\n//           <div className=\"main-wrapper\">\n//             <Route path=\"/dashboard\" component={Dashboard} />\n//             <Route path=\"/countReport\" component={Count} />\n//             <Route path=\"/agency\" component={Agency} />\n//           </div>\n//         </Router>\n//   )\n// }\n//\n//\n// function mapStateToProps({user}){\n//   return {\n//     loaded: user.loaded,\n//     type:user.type\n//   }\n// }\n//\n// const mapDispatchToProps = {\n//   initialLoad,\n// }\n//\n// export default connect(mapStateToProps, mapDispatchToProps)(app);\n//\n//\n\n\n\n\n\n\n\nimport React,{useEffect} from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux'\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Login from './components/login/Login'\nimport Dashboard from './components/dashboard'\nimport Header from './components/header/Header'\nimport Count from './components/count/Count'\nimport Agency from './components/agency/Agency';\nimport {initialLoad} from 'store/actions/appActions'\n\nfunction app({loaded, initialLoad, requiredData,type}) {\n  useEffect(()=>{\n    if(loaded!==1){\n        requiredData()\n        initialLoad()\n    }\n  }, [loaded])\n\n  if(loaded!==1)\n    return <div className=\"lds-dual-ring body-loder\"></div>\n\n  return (\n    <Router>\n      <Route exact path=\"/\" component={Login} />\n      <Header/>\n      <div className=\"main-wrapper\">\n        <Route path=\"/dashboard\" component={Dashboard} />\n        <Route path=\"/countReport\" component={Count} />\n        <Route path=\"/agency\" component={Agency} />\n      </div>\n    </Router>\n  )\n}\n\nfunction mapStateToProps({user}){\n  return {\n    loaded: user.loaded\n  }\n}\n\nconst mapDispatchToProps = {\n  initialLoad,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(app);\n"]},"metadata":{},"sourceType":"module"}