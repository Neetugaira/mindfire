{"ast":null,"code":"import _objectWithoutProperties from \"/home/neetu/mindfire-app/mindfire-app/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/neetu/mindfire-app/mindfire-app/client/src/utils/PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isLogin } from '../utils/checkToken';\n\nconst PrivateRoute = (_ref) => {\n  let Component = _ref.component,\n      rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n  return (// Show the component only when the user is logged in\n    // Otherwise, redirect the user to /login page\n    React.createElement(Route, Object.assign({}, rest, {\n      render: props => isLogin() ? React.createElement(Component, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      })) : React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }))\n  );\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/home/neetu/mindfire-app/mindfire-app/client/src/utils/PrivateRoute.js"],"names":["React","Route","Redirect","isLogin","PrivateRoute","Component","component","rest","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,qBAAxB;;AAEA,MAAMC,YAAY,GAAG,UAAsC;AAAA,MAAxBC,SAAwB,QAAnCC,SAAmC;AAAA,MAAVC,IAAU;;AACvD,SACI;AACA;AACA,wBAAC,KAAD,oBAAWA,IAAX;AAAiB,MAAA,MAAM,EAAEC,KAAK,IAC1BL,OAAO,KACP,oBAAC,SAAD,oBAAeK,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADO,GAEP,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AASH,CAVD;;AAWA,eAAeJ,YAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isLogin } from '../utils/checkToken';\n\nconst PrivateRoute = ({ component: Component, ...rest}) => {\n    return (\n        // Show the component only when the user is logged in\n        // Otherwise, redirect the user to /login page\n        <Route {...rest} render={props => (\n            isLogin() ?\n            <Component {...props}/> :\n            <Redirect to=\"/\" /> \n        )} />\n    )\n}\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}