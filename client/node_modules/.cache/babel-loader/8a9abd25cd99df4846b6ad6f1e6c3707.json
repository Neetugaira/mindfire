{"ast":null,"code":"import _objectSpread from \"/home/neetu/mindfire-app/mindfire-app/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/neetu/mindfire-app/mindfire-app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/neetu/mindfire-app/mindfire-app/client/src/components/modals/EditProfileModal.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { showModal, onUserDetatils } from '../../modalStore/modalActions';\nimport request from '../../utils/request';\n\nfunction EditProfileModal({\n  isModalOpen,\n  showModal,\n  onUserDetatils,\n  dispatch,\n  history\n}) {\n  // alert(isModalOpen)\n  let _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      countries = _useState2[0],\n      setCountries = _useState2[1];\n\n  let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n\n  let _useState3 = useState({\n    f_name: currentUser.f_name,\n    l_name: currentUser.l_name,\n    country: currentUser.country,\n    pre: currentUser.pre\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      state = _useState4[0],\n      setState = _useState4[1];\n\n  let _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      err_f_name = _useState6[0],\n      setErr_f_name = _useState6[1];\n\n  let _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      err_l_name = _useState8[0],\n      setErr_l_name = _useState8[1];\n\n  let _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      err_country = _useState10[0],\n      setErr_country = _useState10[1];\n\n  useEffect(() => {\n    request('GET', '/auth/getCategoriesAndCountries').then(res => {\n      if (res.data.success) {\n        setCountries(res.data.countries);\n      }\n    });\n  }, [setCountries]);\n\n  const handleChange = event => {\n    if (event.target.name === 'country') {\n      let temp = JSON.parse(event.target.value);\n      setState(_objectSpread({}, state, {\n        'country': temp.name,\n        'pre': temp.phonecode\n      }));\n    } else {\n      setState(_objectSpread({}, state, {\n        [event.target.name]: event.target.value\n      }));\n    }\n  };\n\n  const validateForm = () => {\n    let isFormValid = true;\n\n    if (state.f_name === '') {\n      isFormValid = false;\n      setErr_f_name(\"*Please enter your First Name.\");\n    }\n\n    if (typeof state.f_name !== \"undefined\") {\n      if (!state.f_name.match(/^[a-zA-Z ]*$/)) {\n        isFormValid = false;\n        setErr_f_name(\"*Please enter alphabet characters only.\");\n      }\n    }\n\n    if (state.l_name === '') {\n      isFormValid = false;\n      setErr_l_name(\"*Please enter your Last Name.\");\n    }\n\n    if (typeof state.l_name !== \"undefined\") {\n      if (!state.l_name.match(/^[a-zA-Z ]*$/)) {\n        isFormValid = false;\n        setErr_l_name(\"*Please enter alphabet characters only.\");\n      }\n    }\n\n    if (state.country === '') {\n      isFormValid = false;\n      setErr_country(\"*Please select Country.\");\n    }\n\n    return isFormValid;\n  };\n\n  const submit = () => {\n    const isValid = validateForm();\n\n    if (isValid) {\n      let updateData = {\n        f_name: state.f_name,\n        l_name: state.l_name,\n        country: state.country,\n        pre: state.pre\n      };\n      request('PUT', '/auth/updateUser', {\n        data: updateData\n      }).then(res => {\n        if (res.data.success) {\n          toast.success(res.data.message);\n          let updatedUser = JSON.stringify(res.data.updatedUser);\n          dispatch(onUserDetatils(updatedUser));\n          showModal();\n        } else {\n          toast.error(res.data.message);\n        }\n      });\n    }\n  };\n\n  let visible = {\n    display: 'block'\n  };\n  let inVisible = {\n    display: 'none'\n  };\n  return React.createElement(\"div\", {\n    style: isModalOpen ? visible : inVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"bottom-to-top-slide\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"b__t-slide-component edit-profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Edit Profile\"), React.createElement(\"div\", {\n    className: \"absolute-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"minized-btn\",\n    title: \"Minimize\",\n    onClick: showModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa  fa-minus \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"close-btn\",\n    title: \"Close\",\n    onClick: showModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa  fa-close \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"cover height-scroll pt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"loading-profile\",\n    style: {\n      display: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"images/pending-loader.svg\",\n    className: \"pending-loader\",\n    width: 80,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"edit-profile-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \" flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"f_name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"First Name\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"f_name\",\n    defaultValue: state.f_name,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), state.f_name === '' || !state.f_name.match(/^[a-zA-Z ]*$/) ? React.createElement(\"span\", {\n    className: \"error-msg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, err_f_name) : null), React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"l_name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Last Name\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"l_name\",\n    defaultValue: state.l_name,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), state.l_name === '' || !state.l_name.match(/^[a-zA-Z ]*$/) ? React.createElement(\"span\", {\n    className: \"error-msg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, err_l_name) : null)), React.createElement(\"div\", {\n    className: \"flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Email \"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"email\",\n    defaultValue: state.email,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"country\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Country\"), React.createElement(\"select\", {\n    className: \"form-control\",\n    name: \"country\",\n    type: \"text\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: state.country,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, state.country), countries.map((count, i) => {\n    return React.createElement(\"option\", {\n      key: i,\n      value: JSON.stringify(count),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, count.name);\n  })), state.country === '' ? React.createElement(\"span\", {\n    className: \"error-msg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, err_country) : null))), React.createElement(\"div\", {\n    className: \"col-md-12 \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"fixes-button-bottom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn blue-btn\",\n    type: \"submit\",\n    onClick: submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \" Update \")))))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    isModalOpen: state.modalReducer.modalState\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    showModal: () => dispatch(showModal(false)),\n    onUserDetatils: onUserDetatils,\n    dispatch\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProfileModal);","map":{"version":3,"sources":["/home/neetu/mindfire-app/mindfire-app/client/src/components/modals/EditProfileModal.js"],"names":["React","useState","useEffect","connect","toast","showModal","onUserDetatils","request","EditProfileModal","isModalOpen","dispatch","history","countries","setCountries","currentUser","JSON","parse","localStorage","getItem","f_name","l_name","country","pre","state","setState","err_f_name","setErr_f_name","err_l_name","setErr_l_name","err_country","setErr_country","then","res","data","success","handleChange","event","target","name","temp","value","phonecode","validateForm","isFormValid","match","submit","isValid","updateData","message","updatedUser","stringify","error","visible","display","inVisible","email","map","count","i","mapStateToProps","modalReducer","modalState","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {toast} from 'react-toastify';\nimport { showModal, onUserDetatils } from '../../modalStore/modalActions';\nimport request from '../../utils/request';\n\nfunction EditProfileModal({ isModalOpen, showModal , onUserDetatils , dispatch, history }) {\n    // alert(isModalOpen)\n    let [countries, setCountries] = useState([]);\n    let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    let [state, setState] = useState({ f_name: currentUser.f_name, l_name: currentUser.l_name, country: currentUser.country, pre: currentUser.pre });\n    let [err_f_name, setErr_f_name] = useState('')\n    let [err_l_name,  setErr_l_name] = useState('')\n    let [err_country,  setErr_country] = useState('')\n\n    useEffect(() => {\n        request('GET', '/auth/getCategoriesAndCountries')\n            .then((res) => {\n                if (res.data.success) {\n                    setCountries(res.data.countries)\n                }\n            })\n    }, [setCountries]);\n\n    const handleChange = event => {\n        if (event.target.name === 'country') {\n            let temp = JSON.parse(event.target.value)\n            setState({ ...state, 'country': temp.name, 'pre': temp.phonecode })\n        } else {\n            setState({ ...state, [event.target.name]: event.target.value })\n        }\n    }\n    \n    const validateForm = () => {\n        let isFormValid = true;\n\n        if(state.f_name === '') {\n            isFormValid =false;\n            setErr_f_name(\"*Please enter your First Name.\");\n        }\n        if (typeof state.f_name !== \"undefined\") {\n            if (!state.f_name.match(/^[a-zA-Z ]*$/)) {\n                isFormValid =false;\n                setErr_f_name(\"*Please enter alphabet characters only.\");\n            }\n        }\n\n        if(state.l_name === '') {\n            isFormValid =false;\n            setErr_l_name(\"*Please enter your Last Name.\");\n        }  \n        if (typeof state.l_name !== \"undefined\") {\n            if (!state.l_name.match(/^[a-zA-Z ]*$/)) {\n              isFormValid =false;\n              setErr_l_name(\"*Please enter alphabet characters only.\");\n            }\n        }\n\n        if(state.country === '') {\n            isFormValid =false;\n           setErr_country(\"*Please select Country.\");\n        }\n\n        return isFormValid;\n    }\n    const submit = () => {\n        const isValid = validateForm();\n        if(isValid) {\n            let updateData = {\n                f_name: state.f_name,\n                l_name: state.l_name,\n                country: state.country,\n                pre: state.pre\n            }\n\n            request('PUT','/auth/updateUser', {\n                data: updateData\n            }).then(res => {\n                if(res.data.success) {\n                  toast.success(res.data.message);\n                  let updatedUser =JSON.stringify(res.data.updatedUser);\n                  dispatch(onUserDetatils(updatedUser));\n                  showModal();\n    \n                } else {\n                  toast.error(res.data.message);\n                }\n            })\n        }\n    }\n    let visible = { display: 'block'};\n    let inVisible = { display: 'none'};\n    return (\n        <div style={isModalOpen ? visible : inVisible}>\n                <div className=\"bottom-to-top-slide\">\n                    <div className=\"b__t-slide-component edit-profile\">\n                        <div className=\"title-box\">\n                            <h2>Edit Profile</h2>\n                            <div className=\"absolute-btn\">\n                                {/* <button className=\"edit-btn\" title=\"Minimize\"><i className=\"fa  fa-pencil \" /></button> */}\n                                <button className=\"minized-btn\" title=\"Minimize\" onClick={showModal}><i className=\"fa  fa-minus \" /></button>\n                                <button className=\"close-btn\" title=\"Close\" onClick={showModal}><i className=\"fa  fa-close \" /></button>\n                            </div>\n                        </div>\n                        <div className=\"cover height-scroll pt-3\">\n                            <div className=\"loading-profile\" style={{ display: 'none' }}><img src=\"images/pending-loader.svg\" className=\"pending-loader\" width={80} /></div>\n                            <div className=\"edit-profile-form\">\n                                <div className=\" flex\">\n                                    <div className=\"col-md-6\">\n                                        <label htmlFor=\"f_name\">First Name</label>\n                                        <input className=\"form-control\" type=\"text\" name=\"f_name\" defaultValue={state.f_name} onChange={handleChange}/>\n                                        {state.f_name === '' || (!state.f_name.match(/^[a-zA-Z ]*$/)) ?\n                                            <span className=\"error-msg\">{err_f_name}</span> : null}\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <label htmlFor=\"l_name\">Last Name</label>\n                                        <input className=\"form-control\" type=\"text\" name=\"l_name\" defaultValue={state.l_name} onChange={handleChange} />\n                                        {state.l_name === '' || (!state.l_name.match(/^[a-zA-Z ]*$/)) ?\n                                            <span className=\"error-msg\">{err_l_name}</span> : null}\n                                    </div>\n                                </div>\n                                <div className=\"flex\">\n                                    <div className=\"col-md-6\">\n                                        <label>Email </label>\n                                        <input className=\"form-control\" type=\"email\" defaultValue={state.email} disabled />\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <label htmlFor=\"country\">Country</label>\n                                        <select className=\"form-control\" name=\"country\" type=\"text\" onChange={handleChange}>\n                                            <option value={state.country} >{state.country}</option>\n                                            {\n                                                countries.map((count, i) => {\n                                                return (<option key={i} value={JSON.stringify(count)} >{count.name}</option>)\n                                                })\n                                            }\n                                        </select>  \n                                        {state.country === '' ?\n                                            <span className=\"error-msg\">{err_country}</span> : null} \n                                    </div>\n                                </div>\n                                \n                            </div>\n                            <div className=\"col-md-12 \">\n                                <div className=\"fixes-button-bottom\">\n                                    <button className=\"btn blue-btn\" type=\"submit\" onClick={submit}> Update </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n     </div>\n    );\n}\nconst mapStateToProps = state => {\n    return {\n        isModalOpen: state.modalReducer.modalState\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        showModal: () => dispatch(showModal(false)),\n        onUserDetatils:onUserDetatils,\n        dispatch\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProfileModal)"]},"metadata":{},"sourceType":"module"}